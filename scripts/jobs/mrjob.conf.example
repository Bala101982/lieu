runners:
    inline:
        base_tmp_dir: /data/tmp
    local:
        base_tmp_dir: /data/tmp
    emr:
        # 1. REQUIRED: do one of the following
        #    a) add your AWS key and secret below
        #    b) use env variables AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY
        aws_access_key_id:
        aws_secret_access_key:

        # 2. Specify Instance types
        master_instance_type: r3.xlarge
        instance_type: r3.2xlarge
        image_version: 5.6.0

        # 3. Specify number of core instances (workers)
        num_core_instances: 4

        # 4. specify any Spark jobconf options
        jobconf:
            # 4a. varies according to the selection of master_instance_type above
            spark.driver.memory: 16g
            spark.driver.cores: 3

            # 4b. varies according to the selection of instance_type and num_core_instances above
            spark.executor.instances: 8 # num_core_instances * 2
            spark.executor.cores: 4 # num cores on instance type / 2
            spark.executor.memory: 30g # (memory on instance type - 1GB) / executors per instance

            # (optional) this is a reasonable default to prevent timeouts on large data sets
            spark.network.timeolut: 900s

        # (optional) specify region
        region: us-east-1

        # (optional) specify a bid price if you want to use spot instances or delete line
        #core_instance_bid_price: '0.42'

        # (optional) Set temp dir to your bucket and path (otherwise mrjob will create a random bucket)
        cloud_tmp_dir:

        cmdenv:
            LD_LIBRARY_PATH: /usr/local/lib

        bootstrap:
            # (optional): install any extra packages via yum
            - sudo yum install -y git curl autoconf automake libtool pkgconfig python-devel python-pip gcc

            # Install libpostal
            - sudo mkdir -p /opt/src
            - sudo mkdir -p /data
            - USER=`whoami`
            - GROUP=`groups | sed -r 's/ .*//g'`
            - sudo chown -R $USER:$GROUP /opt/src /data
            - cd /opt/src
            - git clone https://github.com/openvenues/libpostal
            - cd libpostal
            - ./bootstrap.sh
            - ./configure --datadir=/data
            - make
            - sudo make install
            - sudo ldconfig

            # (optional): install any Python packages beyond what gets installed with setup.py
            - sudo pip install git+https://github.com/openvenues/lieu.git
